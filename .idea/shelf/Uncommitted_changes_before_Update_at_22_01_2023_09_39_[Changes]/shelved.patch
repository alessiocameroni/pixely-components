Index: pixely-components/src/main/java/com/alessiocameroni/pixely_components/ListItem.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.alessiocameroni.pixely_components\r\n\r\nimport androidx.compose.foundation.layout.*\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.text.style.TextOverflow\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\n\r\n@Composable\r\nfun PixelyListItem(\r\n    modifier: Modifier,\r\n    stringHeadlineText: String,\r\n    stringSupportingText: String? = null,\r\n    leadingUnit: @Composable (() -> Unit?)? = null,\r\n    trailingUnit: @Composable (() -> Unit?)? = null\r\n) {\r\n    if(stringSupportingText != null) {\r\n        // Both Headline and Supporting text\r\n        if(leadingUnit != null && trailingUnit != null) {\r\n            // Both Heading and Trailing units\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 80.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(end = 5.dp)\r\n                        .size(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    leadingUnit()\r\n                }\r\n\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, bottom = 14.dp)\r\n                        .weight(1f)\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringSupportingText,\r\n                        style = MaterialTheme.typography.bodyMedium,\r\n                        fontSize = 14.sp\r\n                    )\r\n                }\r\n\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(start = 5.dp)\r\n                        .defaultMinSize(minWidth = 60.dp)\r\n                        .height(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    trailingUnit()\r\n                }\r\n            }\r\n        }\r\n        else if (leadingUnit != null) {\r\n            // Only Heading unit\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 80.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(end = 5.dp)\r\n                        .size(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    leadingUnit()\r\n                }\r\n\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, end = 20.dp, bottom = 14.dp)\r\n                        .weight(1f)\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringSupportingText,\r\n                        style = MaterialTheme.typography.bodyMedium,\r\n                        fontSize = 14.sp\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        else if (trailingUnit != null) {\r\n            // Only Trailing unit\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 80.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, start = 20.dp, bottom = 14.dp)\r\n                        .weight(1f)\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringSupportingText,\r\n                        style = MaterialTheme.typography.bodyMedium,\r\n                        fontSize = 14.sp\r\n                    )\r\n                }\r\n\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(start = 5.dp)\r\n                        .defaultMinSize(minWidth = 60.dp)\r\n                        .height(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    trailingUnit()\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // Only Headline and Supporting text\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 80.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(horizontal = 20.dp, vertical = 15.dp)\r\n                        .weight(1f)\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringSupportingText,\r\n                        style = MaterialTheme.typography.bodyMedium,\r\n                        fontSize = 14.sp\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        // Only Headline text present\r\n        if(leadingUnit != null && trailingUnit != null) {\r\n            // Both Heading and Trailing units\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 60.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(end = 5.dp)\r\n                        .size(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    leadingUnit()\r\n                }\r\n\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, bottom = 14.dp)\r\n                        .weight(1f),\r\n                    verticalArrangement = Arrangement.Center\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n                }\r\n\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(start = 5.dp)\r\n                        .defaultMinSize(minWidth = 60.dp)\r\n                        .height(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    trailingUnit()\r\n                }\r\n            }\r\n        }\r\n        else if (leadingUnit != null) {\r\n            // Only Heading unit\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 60.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(end = 5.dp)\r\n                        .size(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    leadingUnit()\r\n                }\r\n\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, bottom = 14.dp)\r\n                        .padding(end = 20.dp)\r\n                        .weight(1f),\r\n                    verticalArrangement = Arrangement.Center\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        else if (trailingUnit != null) {\r\n            // Only Trailing unit\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 60.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, bottom = 14.dp)\r\n                        .padding(start = 20.dp)\r\n                        .weight(1f),\r\n                    verticalArrangement = Arrangement.Center\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n                }\r\n\r\n                Box(\r\n                    modifier = Modifier\r\n                        .padding(start = 5.dp)\r\n                        .defaultMinSize(minWidth = 60.dp)\r\n                        .height(60.dp),\r\n                    contentAlignment = Alignment.Center\r\n                ) {\r\n                    trailingUnit()\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // Only Headline Text\r\n            Row(\r\n                modifier = modifier\r\n                    .padding(horizontal = 5.dp)\r\n                    .fillMaxWidth()\r\n                    .defaultMinSize(minHeight = 60.dp),\r\n                verticalAlignment = Alignment.CenterVertically\r\n            ) {\r\n                Column(\r\n                    modifier = Modifier\r\n                        .padding(top = 16.dp, bottom = 14.dp)\r\n                        .padding(horizontal = 20.dp)\r\n                        .weight(1f),\r\n                    verticalArrangement = Arrangement.Center\r\n                ) {\r\n                    Text(\r\n                        modifier = Modifier.fillMaxWidth(),\r\n                        text = stringHeadlineText,\r\n                        style = MaterialTheme.typography.titleLarge,\r\n                        fontSize = 20.sp,\r\n                        maxLines = 2,\r\n                        overflow = TextOverflow.Ellipsis\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pixely-components/src/main/java/com/alessiocameroni/pixely_components/ListItem.kt b/pixely-components/src/main/java/com/alessiocameroni/pixely_components/ListItem.kt
--- a/pixely-components/src/main/java/com/alessiocameroni/pixely_components/ListItem.kt	(revision 29cc4abe1e32722387d38446e7c1e4f4a0ef9323)
+++ b/pixely-components/src/main/java/com/alessiocameroni/pixely_components/ListItem.kt	(date 1674339304153)
@@ -2,13 +2,17 @@
 
 import androidx.compose.foundation.layout.*
 import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Surface
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
 import androidx.compose.ui.text.style.TextOverflow
+import androidx.compose.ui.unit.Dp
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
+import javax.sql.RowSet
 
 @Composable
 fun PixelyListItem(
@@ -19,24 +23,21 @@
     trailingUnit: @Composable (() -> Unit?)? = null
 ) {
     if(stringSupportingText != null) {
-        // Both Headline and Supporting text
-        if(leadingUnit != null && trailingUnit != null) {
-            // Both Heading and Trailing units
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 80.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+        // Headline and Supporting text List Item
+        ContainerListItem(
+            modifier = modifier,
+            minHeight = HeadlineSupportingRowMinimumHeight,
+            paddingValues = PaddingValues(
+                horizontal = MinimumHorizontalPadding
+            )
+        ) {
+            if(leadingUnit != null && trailingUnit != null) {
                 Box(
                     modifier = Modifier
-                        .padding(end = 5.dp)
+                        .padding(end = MinimumHorizontalPadding)
                         .size(60.dp),
                     contentAlignment = Alignment.Center
-                ) {
-                    leadingUnit()
-                }
+                ) { leadingUnit() }
 
                 Column(
                     modifier = Modifier
@@ -62,36 +63,23 @@
 
                 Box(
                     modifier = Modifier
-                        .padding(start = 5.dp)
+                        .padding(start = MinimumHorizontalPadding)
                         .defaultMinSize(minWidth = 60.dp)
                         .height(60.dp),
                     contentAlignment = Alignment.Center
-                ) {
-                    trailingUnit()
-                }
+                ) { trailingUnit() }
             }
-        }
-        else if (leadingUnit != null) {
-            // Only Heading unit
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 80.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+            else if (leadingUnit != null) {
                 Box(
                     modifier = Modifier
-                        .padding(end = 5.dp)
+                        .padding(end = MinimumHorizontalPadding)
                         .size(60.dp),
                     contentAlignment = Alignment.Center
-                ) {
-                    leadingUnit()
-                }
+                ) { leadingUnit() }
 
                 Column(
                     modifier = Modifier
-                        .padding(top = 16.dp, end = 20.dp, bottom = 14.dp)
+                        .padding(top = 16.dp, end = MaximumHorizontalPadding, bottom = 14.dp)
                         .weight(1f)
                 ) {
                     Text(
@@ -111,19 +99,10 @@
                     )
                 }
             }
-        }
-        else if (trailingUnit != null) {
-            // Only Trailing unit
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 80.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+            else if (trailingUnit != null) {
                 Column(
                     modifier = Modifier
-                        .padding(top = 16.dp, start = 20.dp, bottom = 14.dp)
+                        .padding(top = 16.dp, start = MaximumHorizontalPadding, bottom = 14.dp)
                         .weight(1f)
                 ) {
                     Text(
@@ -145,7 +124,7 @@
 
                 Box(
                     modifier = Modifier
-                        .padding(start = 5.dp)
+                        .padding(start = MinimumHorizontalPadding)
                         .defaultMinSize(minWidth = 60.dp)
                         .height(60.dp),
                     contentAlignment = Alignment.Center
@@ -153,19 +132,13 @@
                     trailingUnit()
                 }
             }
-        }
-        else {
-            // Only Headline and Supporting text
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 80.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+            else {
                 Column(
                     modifier = Modifier
-                        .padding(horizontal = 20.dp, vertical = 15.dp)
+                        .padding(
+                            horizontal = MaximumHorizontalPadding,
+                            vertical = MinimumHorizontalPadding
+                        )
                         .weight(1f)
                 ) {
                     Text(
@@ -187,19 +160,18 @@
             }
         }
     } else {
-        // Only Headline text present
-        if(leadingUnit != null && trailingUnit != null) {
-            // Both Heading and Trailing units
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 60.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+        // Headline text List Item
+        ContainerListItem(
+            modifier = modifier,
+            minHeight = HeadlineOnlyRowMinimumHeight,
+            paddingValues = PaddingValues(
+                horizontal = MinimumHorizontalPadding
+            )
+        ) {
+            if(leadingUnit != null && trailingUnit != null) {
                 Box(
                     modifier = Modifier
-                        .padding(end = 5.dp)
+                        .padding(end = MinimumHorizontalPadding)
                         .size(60.dp),
                     contentAlignment = Alignment.Center
                 ) {
@@ -224,7 +196,7 @@
 
                 Box(
                     modifier = Modifier
-                        .padding(start = 5.dp)
+                        .padding(start = MinimumHorizontalPadding)
                         .defaultMinSize(minWidth = 60.dp)
                         .height(60.dp),
                     contentAlignment = Alignment.Center
@@ -232,19 +204,10 @@
                     trailingUnit()
                 }
             }
-        }
-        else if (leadingUnit != null) {
-            // Only Heading unit
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 60.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+            else if (leadingUnit != null) {
                 Box(
                     modifier = Modifier
-                        .padding(end = 5.dp)
+                        .padding(end = MinimumHorizontalPadding)
                         .size(60.dp),
                     contentAlignment = Alignment.Center
                 ) {
@@ -254,7 +217,7 @@
                 Column(
                     modifier = Modifier
                         .padding(top = 16.dp, bottom = 14.dp)
-                        .padding(end = 20.dp)
+                        .padding(end = MaximumHorizontalPadding)
                         .weight(1f),
                     verticalArrangement = Arrangement.Center
                 ) {
@@ -268,20 +231,11 @@
                     )
                 }
             }
-        }
-        else if (trailingUnit != null) {
-            // Only Trailing unit
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 60.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+            else if (trailingUnit != null) {
                 Column(
                     modifier = Modifier
                         .padding(top = 16.dp, bottom = 14.dp)
-                        .padding(start = 20.dp)
+                        .padding(start = MaximumHorizontalPadding)
                         .weight(1f),
                     verticalArrangement = Arrangement.Center
                 ) {
@@ -297,7 +251,7 @@
 
                 Box(
                     modifier = Modifier
-                        .padding(start = 5.dp)
+                        .padding(start = MinimumHorizontalPadding)
                         .defaultMinSize(minWidth = 60.dp)
                         .height(60.dp),
                     contentAlignment = Alignment.Center
@@ -305,20 +259,11 @@
                     trailingUnit()
                 }
             }
-        }
-        else {
-            // Only Headline Text
-            Row(
-                modifier = modifier
-                    .padding(horizontal = 5.dp)
-                    .fillMaxWidth()
-                    .defaultMinSize(minHeight = 60.dp),
-                verticalAlignment = Alignment.CenterVertically
-            ) {
+            else {
                 Column(
                     modifier = Modifier
                         .padding(top = 16.dp, bottom = 14.dp)
-                        .padding(horizontal = 20.dp)
+                        .padding(horizontal = MaximumHorizontalPadding)
                         .weight(1f),
                     verticalArrangement = Arrangement.Center
                 ) {
@@ -334,4 +279,35 @@
             }
         }
     }
-}
\ No newline at end of file
+}
+
+@Composable
+private fun ContainerListItem(
+    modifier: Modifier,
+    containerColor: Color = MaterialTheme.colorScheme.surface,
+    contentColor: Color = MaterialTheme.colorScheme.onSurface,
+    minHeight: Dp,
+    paddingValues: PaddingValues,
+    content: @Composable RowScope.() -> Unit
+) {
+    Surface(
+        modifier = modifier,
+        color = containerColor,
+        contentColor = contentColor
+    ) {
+        Row(
+            modifier = Modifier
+                .heightIn(min = minHeight)
+                .padding(paddingValues),
+            content = content
+        )
+    }
+}
+
+// Row related default values
+private val HeadlineSupportingRowMinimumHeight = 80.dp
+private val HeadlineOnlyRowMinimumHeight = 60.dp
+
+// Padding related default values
+private val MinimumHorizontalPadding = 5.dp
+private val MaximumHorizontalPadding = 20.dp
\ No newline at end of file
Index: app/src/main/java/com/alessiocameroni/pixelycomponentslibrary/Preview.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/alessiocameroni/pixelycomponentslibrary/Preview.kt b/app/src/main/java/com/alessiocameroni/pixelycomponentslibrary/Preview.kt
new file mode 100644
--- /dev/null	(date 1674337635128)
+++ b/app/src/main/java/com/alessiocameroni/pixelycomponentslibrary/Preview.kt	(date 1674337635128)
@@ -0,0 +1,28 @@
+package com.alessiocameroni.pixelycomponentslibrary
+
+import androidx.compose.material3.ExperimentalMaterial3Api
+import androidx.compose.material3.Icon
+import androidx.compose.material3.ListItem
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.tooling.preview.Preview
+import com.alessiocameroni.pixely_components.PixelyListItem
+
+@OptIn(ExperimentalMaterial3Api::class)
+@Preview
+@Composable
+fun Preview() {
+    PixelyListItem(
+        modifier = Modifier,
+        stringHeadlineText = "Headline",
+        stringSupportingText = "Supporting Text",
+        leadingUnit = {
+            Icon(
+                painter = painterResource(id = R.drawable.ic_android_24dp),
+                contentDescription = ""
+            )
+        }
+    )
+}
\ No newline at end of file
